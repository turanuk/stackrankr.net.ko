@* Remove this section if you are using bundling *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Log in";

    // Initialize general page variables
    var email = "";
    var password = "";
    var rememberMe = false;

    var returnUrl = Request.QueryString["ReturnUrl"];
    if (returnUrl.IsEmpty()) {
        // Some external login providers always require a return URL value
        returnUrl = Href("~/");
    }

    // Setup validation
    Validation.RequireField("email", "You must specify an email address.");
    Validation.RequireField("password", "You must specify a password.");

    // If this is a POST request, validate and process data
    if (IsPost) {
        AntiForgery.Validate();
        // is this an external login request?
        string provider = Request.Form["provider"];
        if (!provider.IsEmpty()) {
            OAuthWebSecurity.RequestAuthentication(provider, Href("~/Account/RegisterService", new { returnUrl }));
            return;
        } else if (Validation.IsValid()) {
            email = Request.Form["email"];
            password = Request.Form["password"];
            rememberMe = Request.Form["rememberMe"].AsBool();

            if (WebSecurity.UserExists(email) && WebSecurity.GetPasswordFailuresSinceLastSuccess(email) > 4 && WebSecurity.GetLastPasswordFailureDate(email).AddSeconds(60) > DateTime.UtcNow) {
                Response.Redirect("~/Account/AccountLockedOut");
                return;
            }

            // Attempt to log in using provided credentials
            if (WebSecurity.Login(email, password, rememberMe)) {
                Context.RedirectLocal(returnUrl);
                return;
            } else {
                ModelState.AddFormError("The user name or password provided is incorrect.");
            }
        }
    }
}

<section id="loginForm">
    <h2>Login</h2>
    <form method="post" class="form-horizontal">
        @AntiForgery.GetHtml()
        @* If one or more validation errors exist, show an error *@
        @Html.ValidationSummary("Log in was unsuccessful. Please correct the errors and try again.", excludeFieldErrors: true, htmlAttributes: null)

        <fieldset>
          <legend>Log in to Your Account</legend>
          <div class="control-group">
            <label class="control-label" for="email">Email address</label>
            <div class="controls">
              <div class="input-prepend">
                <span class="add-on"><i class="icon-envelope"></i></span>
                <input type="text" class="span3" id="email" name="email" value="@email" @Validation.For("email")/>
              </div>
              @Html.ValidationMessage("email")
            </div>
          </div>
          <div class="control-group">
            <label class="control-label" for="password" >Password</label>
            <div class="controls">
              <div class="input-prepend">
                <span class="add-on"><i class="icon-lock"></i></span>
                <input type="password" class="span3" id="password" name="password" @Validation.For("password")/>
              </div>
              @Html.ValidationMessage("password")
            </div>
          </div>
          <div class="control-group">
            <label class="control-label" for="rememberMe">Remember me?</label>
            <div class="controls">
              <input type="checkbox" id="rememberMe" class="checkbox" name="rememberMe" value="true" checked="@rememberMe" />
            </div>
          </div>
          <div class="form-actions">
            <input type="submit" value="Log in" class="btn btn-success"/>
          </div>
        </fieldset>
    </form>
  <p>
    <a href="~/Account/Register">Don't have a Account?</a>
  </p>
  <p>
    <a href="~/Account/ForgotPassword">Did you forget your password?</a>
  </p>
</section>